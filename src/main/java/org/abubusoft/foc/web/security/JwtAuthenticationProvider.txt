package org.abubusoft.foc.web.security;

import org.abubusoft.foc.web.security.ng.JwtUser;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.AuthenticationProvider;
import org.springframework.security.authentication.BadCredentialsException;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.AuthenticationException;
import org.springframework.stereotype.Component;

@Component
public class JwtAuthenticationProvider implements AuthenticationProvider {
    
    @Autowired
    private JwtService jwtService;
    
    public void setService(JwtService jwtService) {
		this.jwtService = jwtService;
	}

	public Authentication authenticate(Authentication authentication) throws AuthenticationException {
		JwtAuthentication jwtAuthentication = (JwtAuthentication) authentication;
        
        JwtUser user=jwtService.getUser(jwtAuthentication);
        if (user!=null) {			
							        
	        //JwtAuthentication authentication=jwtService.decodeToken(jwtToken);
        	// non dobbiamo fare nulla, dato che è già valido
	        return authentication;
        } else {
//        	if (!jwtService.isStillValid(jwtToken))
//        	{
//        		throw new BadCredentialsException("Session expired.");
//        	}
        	throw new BadCredentialsException("Invalid credentials.");
        }

       
    }

    public boolean supports(Class<?> authentication) {
        return JwtAuthentication.class.equals(authentication);
    }
   
}